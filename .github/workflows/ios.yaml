name: IOS

on: push

jobs:

  build-and-release:
    runs-on: macos-15

    steps:

      - uses: actions/checkout@v4
      - uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 16'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.24.4'

      - name: Find and Replace OpenAIP
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.dart'
          search-text: '@@___openaip_client_id__@@'
          replacement-text: ${{ secrets.OPENAIP_CLIENT_ID }}
          encoding: 'utf8'
          max-parallelism: 10

      - name: Install the Apple certificate and provisioning profile
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }} | base64 --decode --output $CERTIFICATE_PATH
          echo -n ${{ secrets.IOS_MOBILE_PROVISIONING_PROFILE_BASE64 }} | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p ${{ secrets.IOS_GITHUB_KEYCHAIN_PASSWORD }} $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p ${{ secrets.IOS_GITHUB_KEYCHAIN_PASSWORD }} $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P ${{ secrets.IOS_BUILD_CERTIFICATE_PASSWORD }} -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install project dependencies
        run: flutter pub get

      - name: Integration Test
        run: |
          flutter test integration_test/app_test.dart -d 'iPhone 15'

      - name: Build artifacts
        run: flutter build ipa --release --export-options-plist=ios/GithubActionsExportOptions.plist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS
          path: build/ios/ipa/*.ipa

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
          
  
